// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ —Å—Ç–∏–ª–∏
import { useEffect, useState } from 'react';
import axios from 'axios';
import './App.css';

function App() {
    // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤, –∑–∞–≥—Ä—É–∑–∫–∏, –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –æ—à–∏–±–æ–∫
    const [repos, setRepos] = useState([]); // –°–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
    const [loading, setLoading] = useState(false); // –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    const [selectedRepoId, setSelectedRepoId] = useState(null); // ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    const [repoDetails, setRepoDetails] = useState({}); // –î–∞–Ω–Ω—ã–µ –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    const [error, setError] = useState(null); // –û—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –≤–æ–∑–Ω–∏–∫–ª–∏

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
    const fetchRepos = async () => {
        setLoading(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ true
        setError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
        try {
            // –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
            const res = await axios.get('http://localhost:3000/api/repos');
            setRepos(res.data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        } catch (err) {
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            setError(
                '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            );
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        }
        setLoading(false); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    const triggerSync = async () => {
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            await axios.post('http://localhost:3000/api/sync');
            await fetchRepos(); // –ü–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        } catch (err) {
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            setError('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', err); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    const toggleRepoDetails = async (id) => {
        if (selectedRepoId === id) {
            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ—Ç –∂–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, —á—Ç–æ –∏ –±—ã–ª —Ä–∞–Ω–µ–µ ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
            setSelectedRepoId(null);
            return;
        }

        setSelectedRepoId(id); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        if (!repoDetails[id]) {
            try {
                // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø–æ ID
                const res = await axios.get(
                    `http://localhost:3000/api/repos/${id}`
                );
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                setRepoDetails((prev) => ({ ...prev, [id]: res.data }));
            } catch (err) {
                // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.');
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:', err); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            }
        }
    };

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º useEffect –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
    useEffect(() => {
        fetchRepos();
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

    return (
        <div className="container">
            <h1>üî• GitHub Trending Repos</h1>
            <button onClick={triggerSync}>üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å</button>

            {/* –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
            {loading ? (
                <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            ) : error ? (
                // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                <p style={{ color: 'red' }}>{error}</p>
            ) : (
                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                <ul>
                    {repos.map((repo) => (
                        <li key={repo.id}>
                            <div
                                style={{ cursor: 'pointer' }}
                                onClick={() => toggleRepoDetails(repo.id)} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
                            >
                                <strong>{repo.full_name}</strong> ‚≠ê{' '}
                                {repo.stargazers_count}
                            </div>

                            {/* –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —ç—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –¥–µ—Ç–∞–ª–∏ */}
                            {selectedRepoId === repo.id &&
                                repoDetails[repo.id] && (
                                    <div className="repo-details">
                                        <p>
                                            {repoDetails[repo.id]
                                                .description ? (
                                                repoDetails[repo.id].description
                                            ) : (
                                                <em>–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è üòî</em>
                                            )}
                                        </p>
                                        <p>
                                            ‚≠ê{' '}
                                            {
                                                repoDetails[repo.id]
                                                    .stargazers_count
                                            }
                                        </p>
                                        <a
                                            href={repoDetails[repo.id].html_url}
                                            target="_blank"
                                            rel="noreferrer"
                                        >
                                            –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ GitHub
                                        </a>
                                    </div>
                                )}
                        </li>
                    ))}
                </ul>
            )}
        </div>
    );
}

export default App;
